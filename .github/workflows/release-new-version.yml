name: Create and publish a new release

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  run-tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11"]
      fail-fast: true

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - run: pip install poetry
      - run: poetry run python --version
      - run: poetry lock
      - run: poetry install --only main --all-extras
      - run: poetry run python -m unittest -v

  create-release:
    runs-on: ubuntu-latest
    needs: run-tests
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.RELEASE_ACCESS_TOKEN }}
          fetch-depth: 0
      - uses: actions/setup-node@v4
      - name: Configure git
        run: |
          git config --global user.name github-actions
          git config --global user.email github-actions@github.com

      - run: npx standard-version -a
      - run: git push --follow-tags origin master

      - run: npx conventional-github-releaser -p angular
        env:
          CONVENTIONAL_GITHUB_RELEASER_TOKEN: ${{ secrets.RELEASE_ACCESS_TOKEN }}

      - run: pipx install poetry
      - uses: actions/setup-python@v5
        with:
          cache: poetry
      - name: Install python dependencies
        run: |
          poetry self add "poetry-dynamic-versioning[plugin]"
          poetry install --all-extras

      #- name: Build dist
      #  run: poetry build
      #  name: Publish to pypi
      #  run: poetry publish -u __token__ -p $PYPI_TOKEN

      - name: Get latest tag
        id: tag
        run: echo "tag=$( git describe --tags --abbrev=0 )" >> $GITHUB_OUTPUT
      - name: Extract major and minor version numbers
        id: version
        run: echo "version=$( echo ${{ steps.tag.outputs.tag }} | sed -E 's/^v([0-9]+)\.([0-9]+)\..*$/\1.\2/' )" >> $GITHUB_OUTPUT
      - name: Deploy site
        run: |
          poetry run mike set-default --allow-undefined latest
          poetry run mike deploy --update-aliases --push --allow-empty ${{ steps.version.outputs.version }} latest
